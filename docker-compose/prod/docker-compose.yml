services:

  msconfigserver:
    image: jroullet/kundapp-ms-configserver:latest
    container_name: configserver-ms
    networks:
      - kundapp-internal
      - kundapp-public
    ports:
      - "8888:8888"
    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config
    secrets:
      - git_password
    environment:
      GIT_PASSWORD_FILE: /run/secrets/git_password

  msdiscovery:
    image: jroullet/kundapp-ms-discovery:latest
    container_name: discovery-ms
    networks:
      - kundapp-internal
      - kundapp-public
    ports:
      - "8761:8761"
    depends_on:
      msconfigserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  msidentitydb:
    container_name: identitydb
    networks:
      - kundapp-public
      - kundapp-internal
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: identitydb
    volumes:
      - ./docker/mysql-init:/docker-entrypoint-initdb.d
    extends:
      file: common-config.yml
      service: microservice-db-config

  mscoursemgmtdb:
    container_name: coursemgmtdb
    networks:
      - kundapp-public
      - kundapp-internal
    ports:
      - "3309:3306"
    environment:
      MYSQL_DATABASE: coursemgmtdb
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./docker/mysql-course-init:/docker-entrypoint-initdb.d
    extends:
      file: common-config.yml
      service: microservice-db-config

#  msnotificationmongodb:
#    container_name: notificationmongodb
#  networks:
#    - kundapp-public
#    - kundapp-internal
#    ports:
#      - "27018:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: 123
#    extends:
#      file: common-config.yml
#      service: microservice-mongo-config

  mswebapp:
    image: jroullet/kundapp-ms-webapp:latest
    container_name: webapp-ms
    ports:
      - "8080:8080"
    networks:
      - kundapp-public
      - kundapp-internal
    depends_on:
      msidentitydb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-discovery-config
    environment:
      SPRING_DATASOURCE_URL: ${DATABASE_URL}
      APP_INTERNAL_SECRET: ${INTERNAL_SECRET}


  msidentity:
    image: jroullet/kundapp-ms-identity:latest
    container_name: identity-ms
    depends_on:
      msidentitydb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-discovery-config
    environment:
      SPRING_DATASOURCE_URL: ${DATABASE_URL}
      APP_INTERNAL_SECRET: ${INTERNAL_SECRET}


  mscoursemgmt:
    image: jroullet/kundapp-ms-course-mgmt:latest
    container_name: course-mgmt-ms
    depends_on:
      mscoursemgmtdb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-discovery-config
    environment:
      SPRING_DATASOURCE_URL: ${DATABASE_COURSE_URL}

  data-initializer:
    image: mysql:9.3
    container_name: data-initializer
    depends_on:
      msidentity:
        condition: service_started
      msidentitydb:
        condition: service_healthy
      mscoursemgmt:
        condition: service_started
      mscoursemgmtdb:
        condition: service_healthy
    volumes:
      - ./docker/mysql-init/02-data.sql:/tmp/insert-identity-data.sql
      - ./docker/mysql-course-init/02-data.sql:/tmp/insert-course-data.sql
    extends:
      file: common-config.yml
      service: microservice-base-config
    command: >
      sh -c "
        echo 'Waiting for services...' &&
        sleep 45 &&
        echo 'Inserting identity data' &&
        mysql -h identitydb -u root -p${MYSQL_ROOT_PASSWORD} identitydb < /tmp/insert-data.sql &&
        echo 'Identity data inserted!' &&
        echo 'Inserting course data...' &&
        mysql -h coursemgmtdb -u root -p${MYSQL_ROOT_PASSWORD} coursemgmtdb < /tmp/insert-course-data.sql &&
        echo 'Course data inserted!' &&
        echo 'Verification:' &&
        mysql -h identitydb -u root -p${MYSQL_ROOT_PASSWORD} identitydb -e 'SELECT email, role FROM users;'
        mysql -h coursemgmtdb -u root -p${MYSQL_ROOT_PASSWORD} coursemgmtdb -e 'SELECT id, subject, room_name FROM session;'
      "
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}


#  msnotifications:
#    image: jroullet/kundapp-ms-notifications:latest
#    container_name: notifications-ms
#    ports:
#      - "9010:9010"
#    depends_on:
#      notificationmongodb:
#        condition: service_healthy
#    extends:
#      file: common-config.yml
#      service: microservice-discovery-config

secrets:
  git_password:
    file: ./git_password.txt

networks:
  kundapp-public:
    driver: bridge
  kundapp-internal:
    driver: bridge
    internal: true